// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var _, cache, domainExtractors, extension, extractDomains, fs, getFilePath, path, XRegExp;
  path = require('path');
  fs = require('fs');
  _ = require('lodash');
  XRegExp = require('xregexp').XRegExp;
  cache = {};
  extension = __filename.substr(__filename.lastIndexOf('.') + 1);
  getFilePath = function (domain) {
    return path.join(__dirname, 'domain_extractors', '' + domain + '.' + extension);
  };
  module.exports = domainExtractors = function (url) {
    var domainExtractor, domains;
    domains = extractDomains(url);
    domainExtractor = null;
    _.each(domains, function (domain) {
      var filePath;
      if (cache.hasOwnProperty(domain)) {
        return domainExtractor = cache[domain];
      } else {
        filePath = getFilePath(domain);
        if (!fs.existsSync(filePath)) {
          return filePath = null;
        } else {
          domainExtractor = require(filePath);
          return cache[domain] = domainExtractor;
        }
      }
    });
    return domainExtractor;
  };
  extractDomains = function (url) {
    var domain, domainRegex, domains, splitDomain;
    domainRegex = XRegExp('[a-zA-Z]*:*//(?<domain>[a-zA-Z0-9\\-\\.]+)/.*');
    domains = [];
    domain = XRegExp.replace(url, domainRegex, '${domain}');
    domains.push(domain);
    splitDomain = domain.split('.');
    _.each(splitDomain, function (subDomain, index) {
      if (splitDomain.length - index >= 3 || splitDomain.length - index === 3 && subDomain.length > 2) {
        domain = domain.substr(subDomain.length + 1);
        return domains.push(domain);
      }
    });
    return domains;
  };
}.call(this);
